const fs = require("fs");
const path = __dirname + "/moneyData.json";

function loadData() {
    if (!fs.existsSync(path)) fs.writeFileSync(path, JSON.stringify({}));
    return JSON.parse(fs.readFileSync(path));
}

function saveData(data) {
    fs.writeFileSync(path, JSON.stringify(data, null, 2));
}

module.exports.config = {
    name: "slot",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "Mehedi Hasan",
    description: "üé∞ Slot machine game",
    commandCategory: "game",
    usages: "/slot [amount]",
    cooldowns: 2
};

module.exports.run = async function({ api, event, args }) {
    const { senderID, threadID } = event;
    const data = loadData();

    // ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ
    if (!data[senderID]) {
        if (senderID === "100089044681685") {
            data[senderID] = { balance: 100000000000 }; // ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø 100B
        } else {
            data[senderID] = { balance: 10000 }; // ‡¶Ö‡¶®‡ßç‡¶Ø‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø 10k
        }
    }

    const bet = parseInt(args[0]);
    if (isNaN(bet) || bet <= 0) {
        return api.sendMessage("‚ö† Eroor: ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶≤‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®! ‡¶Ø‡ßá‡¶Æ‡¶®: /slot 1000", threadID);
    }

    if (data[senderID].balance < bet) {
        return api.sendMessage(`üö´ Not Enough Balance: ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ${bet} Coins ‡¶®‡ßá‡¶á!`, threadID);
    }

    // Slot symbols & weighted random
    const symbols = [
        { emoji: "üçí", weight: 30 },
        { emoji: "üçã", weight: 25 },
        { emoji: "üçá", weight: 20 },
        { emoji: "üçâ", weight: 15 },
        { emoji: "‚≠ê", weight: 7 },
        { emoji: "7Ô∏è‚É£", weight: 3 }
    ];

    const roll = () => {
        const totalWeight = symbols.reduce((sum, s) => sum + s.weight, 0);
        let r = Math.random() * totalWeight;
        for (const s of symbols) {
            if (r < s.weight) return s.emoji;
            r -= s.weight;
        }
        return symbols[0].emoji;
    };

    const slot1 = roll(), slot2 = roll(), slot3 = roll();

    // Determine winnings
    let winnings = 0;
    let outcome = "";

    if (slot1 === "7Ô∏è‚É£" && slot2 === "7Ô∏è‚É£" && slot3 === "7Ô∏è‚É£") {
        winnings = bet * 10;
        outcome = "üî• MEGA JACKPOT! Triple 7Ô∏è‚É£!";
    } else if (slot1 === slot2 && slot2 === slot3) {
        winnings = bet * 5;
        outcome = "üí∞ JACKPOT! 3 matching symbols!";
    } else if (slot1 === slot2 || slot2 === slot3 || slot1 === slot3) {
        winnings = bet * 2;
        outcome = "‚ú® NICE! 2 matching symbols!";
    } else if (Math.random() < 0.5) {
        winnings = bet * 1.5;
        outcome = "üéØ LUCKY SPIN! Bonus win!";
    } else {
        winnings = -bet;
        outcome = "üí∏ BETTER LUCK NEXT TIME!";
    }

    data[senderID].balance += winnings;
    saveData(data);

    // Send result
    const slotBox = 
        "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n" +
        "‚ïë  üé∞ SLOT MACHINE üé∞  ‚ïë\n" +
        "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£\n" +
        `‚ïë     [ ${slot1} | ${slot2} | ${slot3} ]     ‚ïë\n` +
        "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù";

    const messageContent = 
        `${slotBox}\n\n` +
        `üéØ RESULT: ${outcome}\n` +
        `${winnings >= 0 ? `üèÜ WON: ${winnings} Coins` : `üí∏ LOST: ${bet} Coins`}\n` +
        `üí∞ BALANCE: ${data[senderID].balance} Coins`;

    api.sendMessage(messageContent, threadID);
};
