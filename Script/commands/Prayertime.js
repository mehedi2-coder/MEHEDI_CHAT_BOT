// Ajan.js
// Requires: npm install request moment-timezone
const fs = require('fs');
const path = require('path');
const request = require('request');
const moment = require('moment-timezone');

module.exports.config = {
  name: "prayertime",
  version: "1.0.0",
  credits: "ùêåùêûùê°ùêûùêùùê¢ ùêáùêöùê¨ùêöùêß", // Don't remove credits
  description: "Send Azan messages automatically at prayer times (12h format) using request+fs",
  commandCategory: "Islamic",
  cooldowns: 5
};

// Images list (use your provided links)
const images = [
  "https://i.imgur.com/o6OwL71.jpeg",
  "https://i.imgur.com/j8KWJPc.jpeg",
  "https://i.imgur.com/1tzl381.jpeg",
  "https://i.imgur.com/pT2UUe1.jpeg",
  "https://i.imgur.com/aWWU13H.jpeg",
  "https://i.imgur.com/bi0UsSd.jpeg",
  "https://i.imgur.com/shHv3vC.jpeg",
  "https://i.imgur.com/xaOUdda.jpeg",
  "https://i.imgur.com/JOF3gpS.jpeg",
  "https://i.imgur.com/QaUCNjc.jpeg",
  "https://i.imgur.com/cIsK2mt.jpeg",
  "https://i.imgur.com/BzP5GLE.jpeg",
  "https://i.imgur.com/Om8CmHX.jpeg",
  "https://i.imgur.com/l5ANMhc.jpeg",
  "https://i.imgur.com/YJst2oE.jpeg",
  "https://i.imgur.com/WEX0spX.jpeg",
  "https://i.imgur.com/Ebo7j4c.jpeg",
  "https://i.imgur.com/AG1JLAH.jpeg",
  "https://i.imgur.com/rnYShxr.jpeg",
  "https://i.imgur.com/K7V8iZo.jpeg",
  "https://i.imgur.com/gdVPT1p.jpeg",
  "https://i.imgur.com/qicdVc4.jpeg",
  "https://i.imgur.com/CPxLab9.jpeg"
];

function getRandomImage() {
  return images[Math.floor(Math.random() * images.length)];
}

function getAzanMessage(prayerName) {
  let customMsg = "";

  if (prayerName === "‡¶´‡¶ú‡¶∞") {
    customMsg = `‚ú® ‡¶´‡¶ú‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶ú‡¶æ‡¶® ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, 
üò¥ ‡¶∏‡¶¨‡¶æ‡¶á ‡¶ò‡ßÅ‡¶Æ ‡¶•‡ßá‡¶ï‡ßá ‡¶â‡¶†‡ßÅ‡¶®‡ß∑
üîØ ‡¶ì‡¶Ø‡ßÅ ‡¶ï‡¶∞‡ßá ‡¶™‡¶æ‡¶ï-‡¶™‡¶¨‡¶ø‡¶§‡ßç‡¶∞ ‡¶π‡ßü‡ßá, 
üïå ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶∏‡¶æ‡¶≤‡¶æ‡¶§ ‡¶Ü‡¶¶‡¶æ‡ßü ‡¶ï‡¶∞‡ßá ‡¶®‡¶ø‡¶®!`;
  } else if (prayerName === "‡¶Ø‡ßã‡¶π‡¶∞") {
    customMsg = `‚ú® ‡¶Ø‡ßã‡¶π‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶ú‡¶æ‡¶® ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, 
üï∞Ô∏è ‡¶ï‡¶æ‡¶ú ‡¶¨‡¶æ ‡¶™‡ßú‡¶æ‡¶∂‡ßã‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶∏‡ßç‡¶§‡¶§‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶ù‡ßá‡¶ì, 
üïå ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶∏‡¶Æ‡ßü ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú ‡¶Ü‡¶¶‡¶æ‡ßü ‡¶ï‡¶∞‡ßÅ‡¶®‡•§`;
  } else if (prayerName === "‡¶Ü‡¶∏‡¶∞") {
    customMsg = `‚ú® ‡¶Ü‡¶∏‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶ú‡¶æ‡¶® ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, 
üåá ‡¶¨‡¶ø‡¶ï‡ßá‡¶≤‡ßá‡¶∞ ‡¶¨‡¶∞‡¶ï‡¶§‡¶Æ‡ßü ‡¶∏‡¶Æ‡ßü‡ßá, 
üïå ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú ‡¶Ü‡¶¶‡¶æ‡ßü ‡¶ï‡¶∞‡ßá ‡¶¶‡ßã‡ßü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§`;
  } else if (prayerName === "‡¶Æ‡¶æ‡¶ó‡¶∞‡¶ø‡¶¨") {
    customMsg = `‚ú® ‡¶Æ‡¶æ‡¶ó‡¶∞‡¶ø‡¶¨‡ßá‡¶∞ ‡¶Ü‡¶ú‡¶æ‡¶® ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, 
üåÑ ‡¶∏‡ßÇ‡¶∞‡ßç‡¶Ø ‡¶Ö‡¶∏‡ßç‡¶§ ‡¶ó‡ßá‡¶õ‡ßá, 
üïå ‡¶∏‡¶¨‡¶æ‡¶á ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§ ‡¶π‡ßã‡¶®‡•§`;
  } else if (prayerName === "‡¶è‡¶∂‡¶æ") {
    customMsg = `‚ú® ‡¶è‡¶∂‡¶æ‡¶∞ ‡¶Ü‡¶ú‡¶æ‡¶® ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, 
üåô ‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶∂‡ßá‡¶∑ ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú ‡¶Æ‡¶ø‡¶∏ ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶®‡¶æ, 
üïå ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú ‡¶∂‡ßá‡¶∑‡ßá ‡¶ï‡ßã‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡ßü‡¶æ‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§`;
  }

  return `‚ï≠‚Ä¢‚îÑ‚îÖ‚ïê‚ïê‚ïê‚ùÅüïå‚ùÅ‚ïê‚ïê‚ïê‚îÖ‚îÑ‚Ä¢‚ïÆ

${customMsg}

‚ï∞‚Ä¢‚îÑ‚îÖ‚ïê‚ïê‚ïê‚ùÅüïå‚ùÅ‚ïê‚ïê‚ïê‚îÖ‚îÑ‚Ä¢‚ïØ

‚Ä¢‚Äî¬ª‚ú® ùêåùêûùê°ùêûùêùùê¢ ùêÇùê°ùêöùê≠ ùêÅùê®ùê≠ ‚ú®¬´‚Äî‚Ä¢`;
}

// Prayer times in 12h format (hh:mm AM/PM) ‚Äî update if ‡¶ö‡¶æ‡¶á‡¶≤‡ßá
const prayerTimes = {
  ‡¶´‡¶ú‡¶∞: "05:00 AM",
  ‡¶Ø‡ßã‡¶π‡¶∞: "01:00 PM",
  ‡¶Ü‡¶∏‡¶∞: "04:20 PM",
  ‡¶Æ‡¶æ‡¶ó‡¶∞‡¶ø‡¶¨: "06:00 PM",
  ‡¶è‡¶∂‡¶æ: "07:20 PM"
};

// Ensure cache folder exists
const cacheDir = path.join(__dirname, "cache");
if (!fs.existsSync(cacheDir)) fs.mkdirSync(cacheDir, { recursive: true });

module.exports.onLoad = function({ api }) {
  // check every minute
  setInterval(() => {
    try {
      const now = moment().tz("Asia/Dhaka");
      const currentTime = now.format("hh:mm A"); // 12-hour format with AM/PM

      // iterate prayers
      for (const [prayer, time] of Object.entries(prayerTimes)) {
        if (currentTime === time) {
          const msg = getAzanMessage(prayer);
          const imgUrl = getRandomImage();

          // create unique filename per send to avoid race conditions
          const filename = path.join(cacheDir, `azan_${Date.now()}_${Math.floor(Math.random() * 10000)}.jpg`);

          // download image then send to all threads
          request(encodeURI(imgUrl))
            .on('error', err => {
              console.error("Image download error:", err);
            })
            .pipe(fs.createWriteStream(filename))
            .on('close', async () => {
              try {
                if (!global.data?.allThreadID || !Array.isArray(global.data.allThreadID) || global.data.allThreadID.length === 0) {
                  // cleanup
                  if (fs.existsSync(filename)) fs.unlinkSync(filename);
                  return;
                }
                // send to all groups/threads where bot is present
                for (const threadID of global.data.allThreadID) {
                  try {
                    await api.sendMessage({ body: msg, attachment: fs.createReadStream(filename) }, threadID);
                  } catch (errSend) {
                    console.error(`Failed to send Azan to ${threadID}:`, errSend);
                  }
                }
              } catch (e) {
                console.error("Error in Azan send loop:", e);
              } finally {
                // delete cached file
                try {
                  if (fs.existsSync(filename)) fs.unlinkSync(filename);
                } catch (e) { /* ignore */ }
              }

              console.log(`üïí [${currentTime}] Sent ${prayer} azan message to ${global.data?.allThreadID?.length || 0} threads`);
            });
        }
      }
    } catch (e) {
      console.error("Prayer-time check error:", e);
    }
  }, 60 * 1000); // every minute
};

module.exports.run = async function({ api, event }) {
  return api.sendMessage("‚úÖ ‡¶Ü‡¶ú‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶ü‡ßã ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶Ü‡¶õ‡ßá (12h format).", event.threadID);
};
