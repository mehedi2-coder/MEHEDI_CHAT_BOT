const schedule = require('node-schedule');
const chalk = require('chalk');
const moment = require('moment-timezone');

module.exports.config = {
    name: 'autosent',
    version: '1.4.1', 
    hasPermssion: 0,
    credits: 'ЁЭЧаЁЭЧ▓ЁЭЧ╡ЁЭЧ▓ЁЭЧ▒ЁЭЧ╢ ЁЭЧЫЁЭЧоЁЭШАЁЭЧоЁЭЧ╗',
    description: 'Automatically sends styled hourly messages in all groups (BD Time)',
    commandCategory: 'group messenger',
    usages: '[]',
    cooldowns: 3
};

const captions = {
    0: "ЁЯММ ржЖрж░рзЛ ржПржХржЯрж┐ ржжрж┐ржи рж╢рзЗрж╖ред ЁЯШ┤ ржирждрзБржи ржжрж┐ржирзЗрж░ рж╢рзБрж░рзБ, рж╢рзБржнрж░рж╛рждрзНрж░рж┐ рж╕ржмрж╛ржЗржХрзЗ!",
    1: "ЁЯПГ ржЕржирзЗржХ ржжрзЗрж░рж┐ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ, ржШрзБржорж┐рзЯрзЗ ржкрзЬрзЛ рждрж╛рзЬрж╛рждрж╛рзЬрж┐",
    2: "ЁЯШТ ржпрж╛рж░рж╛ ржЬрзЗржЧрзЗ ржЖржЫрзЛ ржПржХржЯрзБ ржШрзБржорж╛ржирзЛ ржжрж░ржХрж╛рж░!",
    3: "ЁЯММ ржЕржирзЗржХ рж░рж╛ржд рж╣рж▓рзЛ, рж╕ржХрж╛рж▓рзЗрж░ ржЖржЧрзЗ ржмрж┐рж╢рзНрж░рж╛ржо ржирж╛ржУред",
    4: "ЁЯе▒ ржЙржарзЛ, ржлржЬрж░рзЗрж░ рж╕ржорзЯ ржХрж╛ржЫрж╛ржХрж╛ржЫрж┐",
    5: "ЁЯХМ ржЖржЬрж╛ржи рж╣рзЯрзЗ ржпрж╛ржмрзЗ, рж╕ржмрж╛ржЗ ржирж╛ржорж╛ржЬрзЗрж░ ржкрзНрж░рж╕рзНрждрзБрждрж┐ ржирж╛ржУ",
    6: "тШАя╕П ржжрж┐ржи рж╢рзБрж░рзБ рж╣рзЛржХ ржмрж░ржХрждржорзЯ",
    7: "тЪб ржкрзЬрж╛рж╢рзЛржирж╛/ржХрж╛ржЬ рж╢рзБрж░рзБ ржХрж░рж╛рж░ рж╕рзЗрж░рж╛ рж╕ржорзЯ!",
    8: "ЁЯТ╝ ржХрж╛ржЬрзЗ ржоржирзЛржпрзЛржЧ ржжрзЗржУрзЯрж╛рж░ рж╕рзЗрж░рж╛ рж╕ржорзЯ",
    9: "тШХ ржПржХ ржХрж╛ржк ржЪрж╛/ржХржлрж┐ рж╣рж▓рзЗ ржнрж╛рж▓рзЛ рж╣рзЯ",
    10: "ЁЯТк рж╕ржмрж╛ржЗ ржЙржжрзНржпржорзА ржерж╛ржХрзЛ",
    11: "тЬи ржжрзБржкрзБрж░рзЗрж░ ржкрзНрж░рж╕рзНрждрзБрждрж┐ ржирж╛ржУ",
    12: "ЁЯМдя╕П ржжрзБржкрзБрж░рзЗрж░ ржирж╛ржорж╛ржЬ ржУ ржмрж┐рж╢рзНрж░рж╛ржорзЗрж░ рж╕ржорзЯ",
    13: "ЁЯХМ ржЧрзЛрж╕рж▓ ржХрж░рзЗ ржпрзЛрж╣рж░рзЗрж░ рж╕рж╛рж▓рж╛ржд ржЖржжрж╛рзЯ ржХрж░рзЗ ржирж╛ржУред",
    14: "ЁЯеШ ржЦрж╛ржмрж╛рж░ ржЦрзЗрзЯрзЗ ржПржХржЯрзБ ржмрж┐рж╢рзНрж░рж╛ржо ржирж┐рждрзЗ ржкрж╛рж░рзЗрж╛",
    15: "ЁЯе▒ ржПржХржЯрзБ ржкрж╛ржУрзЯрж╛рж░ ржирзНржпрж╛ржк ржирж┐рзЯрзЗ ржирж┐рждрзЗ ржкрж╛рж░рзЛ",
    16: "ЁЯХМ ржЖрж╕рж░рзЗрж░ ржирж╛ржорж╛ржЬ ржЖржжрж╛рзЯ ржХрж░рзЗ ржирж╛ржУ",
    17: "ЁЯЪ╢ ржПржХржЯрзБ рж╣рзЗржБржЯрзЗ рж╢рж░рзАрж░ рж╣рж╛рж▓ржХрж╛ ржХрж░рзЗ ржирж╛ржУ",
    18: "ЁЯХМ ржорж╛ржЧрж░рж┐ржм ржирж╛ржорж╛ржЬ ржЖржжрж╛рзЯ ржХрж░рзЗ ржирж╛ржУ",
    19: "ЁЯСитАНЁЯСжтАНЁЯСж ржкрж░рж┐ржмрж╛рж░рзЗрж░ рж╕рж╛ржерзЗ рж╕ржорзЯ ржХрж╛ржЯрж╛ржУ",
    20: "ЁЯУЪ ржкрзЬрж╛рж╢рзЛржирж╛ ржмрж╛ ржХрж╛ржЬ ржЧрзБржЫрж┐рзЯрзЗ ржирж╛ржУ",
    21: "ЁЯХМ ржЗрж╢рж╛рж░ ржирж╛ржорж╛ржЬ ржЖржжрж╛рзЯ ржХрж░рзЗ ржирж╛ржУ",
    22: "ЁЯН▓ рж░рж╛рждрзЗрж░ ржЦрж╛ржмрж╛рж░ ржЦрзЗрзЯрзЗ ржирж╛ржУ",
    23: "ЁЯШ┤ ржШрзБржорж┐рзЯрзЗ ржкрзЬрж╛рж░ ржнрж╛рж▓рзЛ рж╕ржорзЯ"
};

const images = {
    0: "https://i.imgur.com/o6OwL71.jpeg",
    1: "https://i.imgur.com/j8KWJPc.jpeg",
    2: "https://i.imgur.com/1tzl381.jpeg",
    3: "https://i.imgur.com/pT2UUe1.jpeg",
    4: "https://i.imgur.com/aWWU13H.jpeg",
    5: "https://i.imgur.com/bi0UsSd.jpeg",
    6: "https://i.imgur.com/shHv3vC.jpeg",
    7: "https://i.imgur.com/xaOUdda.jpeg",
    8: "https://i.imgur.com/JOF3gpS.jpeg",
    9: "https://i.imgur.com/QaUCNjc.jpeg",
    10: "https://i.imgur.com/cIsK2mt.jpeg",
    11: "https://i.imgur.com/BzP5GLE.jpeg",
    12: "https://i.imgur.com/Om8CmHX.jpeg",
    13: "https://i.imgur.com/l5ANMhc.jpeg",
    14: "https://i.imgur.com/YJst2oE.jpeg",
    15: "https://i.imgur.com/WEX0spX.jpeg",
    16: "https://i.imgur.com/Ebo7j4c.jpeg",
    17: "https://i.imgur.com/AG1JLAH.jpeg",
    18: "https://i.imgur.com/rnYShxr.jpeg",
    19: "https://i.imgur.com/K7V8iZo.jpeg",
    20: "https://i.imgur.com/gdVPT1p.jpeg",
    21: "https://i.imgur.com/qicdVc4.jpeg",
    22: "https://i.imgur.com/CPxLab9.jpeg",
    23: "https://i.imgur.com/o6OwL71.jpeg"
};

function format12Hour(hour) {
    const h = hour % 12 === 0 ? 12 : hour % 12;
    const ampm = hour < 12 ? 'AM' : 'PM';
    return `${h}:00 ${ampm}`;
}

module.exports.onLoad = ({ api }) => {
    console.log(chalk.bold.hex("#00c300")("============ AUTOSENT COMMAND LOADED (BD TIME) ============"));

    for (let h = 0; h < 24; h++) {
        const rule = new schedule.RecurrenceRule();
        rule.tz = 'Asia/Dhaka';
        rule.hour = h;
        rule.minute = 0;

        schedule.scheduleJob(rule, () => {
            if (!global.data?.allThreadID) return;

            const message = captions[h] || "тП░ рж╕ржорзЯрзЗрж░ ржХржжрж░ ржХрж░рзБржи, ржкрзНрж░рждрж┐ржЯрж┐ ржорзБрж╣рзВрж░рзНрждржЗ ржорзВрж▓рзНржпржмрж╛ржи!";
            const image = images[h] || null;
            const formattedTime = format12Hour(h);

            const finalMessage =
`тАвтФДтФЕтХРтХРтХРтЭБтП░тЭБтХРтХРтХРтФЕтФДтАвтХо

ЁЯХТ ржПржЦржи рж╕ржорзЯ ${h}:00 ржЯрж╛
${message}

ЁЯФ░ рж╕ржорзЯрзЗрж░ ржХржжрж░ ржХрж░рзЛ,
ЁЯФп ржкрзНрж░рждрж┐ржЯрж┐ ржорзБрж╣рзВрж░рзНрждржЗ ржорзВрж▓рзНржпржмрж╛ржи!

тХ░тАвтФДтФЕтХРтХРтХРтЭБтП░тЭБтХРтХРтХРтФЕтФДтАвтХп`;

            global.data.allThreadID.forEach(threadID => {
                api.sendMessage(
                    image ? { body: finalMessage, attachment: { url: image } } : { body: finalMessage },
                    threadID,
                    (error) => {
                        if (error) console.error(`Failed to send message to ${threadID}:`, error);
                    }
                );
            });

            console.log(chalk.hex("#00FFFF")(`Scheduled (BDT): ${formattedTime} => ${message}`));
        });
    }
};

module.exports.run = () => {};
