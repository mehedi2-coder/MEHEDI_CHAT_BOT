const moment = require("moment-timezone");
const chalk = require("chalk");

const banglaDays = {
  Sunday: "‡¶∞‡¶¨‡¶ø‡¶¨‡¶æ‡¶∞",
  Monday: "‡¶∏‡ßã‡¶Æ‡¶¨‡¶æ‡¶∞",
  Tuesday: "‡¶Æ‡¶ô‡ßç‡¶ó‡¶≤‡¶¨‡¶æ‡¶∞",
  Wednesday: "‡¶¨‡ßÅ‡¶ß‡¶¨‡¶æ‡¶∞",
  Thursday: "‡¶¨‡ßÉ‡¶π‡¶∏‡ßç‡¶™‡¶§‡¶ø‡¶¨‡¶æ‡¶∞",
  Friday: "‡¶∂‡ßÅ‡¶ï‡ßç‡¶∞‡¶¨‡¶æ‡¶∞",
  Saturday: "‡¶∂‡¶®‡¶ø‡¶¨‡¶æ‡¶∞"
};

function getBanglaDate(now) {
  const banglaMonths = [
    "‡¶¨‡ßà‡¶∂‡¶æ‡¶ñ","‡¶ú‡ßç‡¶Ø‡ßà‡¶∑‡ßç‡¶†","‡¶Ü‡¶∑‡¶æ‡¶¢‡¶º","‡¶∂‡ßç‡¶∞‡¶æ‡¶¨‡¶£",
    "‡¶≠‡¶æ‡¶¶‡ßç‡¶∞","‡¶Ü‡¶∂‡ßç‡¶¨‡¶ø‡¶®","‡¶ï‡¶æ‡¶∞‡ßç‡¶§‡¶ø‡¶ï","‡¶Ö‡¶ó‡ßç‡¶∞‡¶π‡¶æ‡¶Ø‡¶º‡¶£",
    "‡¶™‡ßå‡¶∑","‡¶Æ‡¶æ‡¶ò","‡¶´‡¶æ‡¶≤‡ßç‡¶ó‡ßÅ‡¶®","‡¶ö‡ßà‡¶§‡ßç‡¶∞"
  ];

  const bdYearOffset = 593;
  let banglaYear = now.year() - bdYearOffset;

  let dayOfYear = now.dayOfYear() - 104;
  if (dayOfYear <= 0) {
    dayOfYear += now.isLeapYear() ? 366 : 365;
    banglaYear -= 1;
  }

  const banglaMonthDays = [31,31,31,31,30,30,30,30,30,30,29,30];
  let remainingDays = dayOfYear;
  let banglaMonthIndex, banglaDate;

  for (let i = 0; i < banglaMonths.length; i++) {
    if (remainingDays <= banglaMonthDays[i]) {
      banglaMonthIndex = i;
      banglaDate = remainingDays;
      break;
    } else {
      remainingDays -= banglaMonthDays[i];
    }
  }

  return {
    date: banglaDate,
    month: banglaMonths[banglaMonthIndex],
    year: banglaYear
  };
}

module.exports.config = {
  name: "autosenttest",
  version: "1.0.0",
  hasPermssion: 0,
  credits: "Mehedi Hasan x Xenobot", //¬© Don't Remove Credits
  description: "Test AutoSent Message Manually",
  commandCategory: "utility",
  usages: "[test]",
  cooldowns: 3
};

module.exports.run = async ({ api, event }) => {
  const now = moment().tz("Asia/Dhaka");
  const engDay = now.format("dddd");
  const engMonth = now.format("MMMM");
  const engDate = now.format("DD");
  const engYear = now.format("YYYY");
  const time = now.format("hh:mm A");
  const bangla = getBanglaDate(now);
  const banglaDay = banglaDays[engDay] || "";

  const msg = `
‚ï≠‚Ä¢‚îÑ‚îÖ‚ïê‚ïê‚ïê‚ùÅüìÖ‚ùÅ‚ïê‚ïê‚ïê‚îÖ‚îÑ‚Ä¢‚ïÆ

üå§Ô∏è ‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ ‡¶Ü‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ‡¶º!
üïó ‡¶∏‡¶Æ‡ßü: ${time} (BDT)

üìÖ ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ:
üëâ ${engDay}, ${engDate} ${engMonth}, ${engYear}

üìÖ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ:
üëâ ${banglaDay}, ${bangla.date} ${bangla.month}, ${bangla.year} ‡¶¨‡¶ô‡ßç‡¶ó‡¶æ‡¶¨‡ßç‡¶¶

üå∏ ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£‡¶æ:
üí™ ‡¶™‡¶∞‡¶ø‡¶∂‡ßç‡¶∞‡¶Æ‡¶á ‡¶∏‡¶æ‡¶´‡¶≤‡ßç‡¶Ø‡ßá‡¶∞ ‡¶è‡¶ï‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶™‡¶•‡•§

ü§≤ ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶≠‡ßÇ‡¶§‡¶ø:
üñ§ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶π‡ßü‡¶§‡ßã ‡¶∏‡¶Æ‡ßü‡¶ü‡¶æ ‡¶Ü‡¶∞‡¶ì ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶π‡¶§‡ßã‡•§

‚ï∞‚Ä¢‚îÑ‚îÖ‚ïê‚ïê‚ïê‚ùÅüìÖ‚ùÅ‚ïê‚ïê‚ïê‚îÖ‚îÑ‚Ä¢‚ïØ

‚ú® Created by: ùêåùêûùê°ùêûùêùùê¢ ùêáùêöùê¨ùêöùêß ‚ú®
`;

  api.sendMessage(msg, event.threadID, () => {
    console.log(chalk.hex("#00FFFF")("‚úÖ Test message sent successfully!"));
  });
};
